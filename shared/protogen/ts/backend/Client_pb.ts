// @generated by protoc-gen-es v2.5.0 with parameter "target=ts,import_extension=none,js_import_style=module"
// @generated from file backend/Client.proto (package backend, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema, IPAllocation, ResourceUsage } from "../common_pb";
import { file_common } from "../common_pb";
import type { ServerStatusType } from "../daemon/Server_pb";
import { file_daemon_Server } from "../daemon/Server_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file backend/Client.proto.
 */
export const file_backend_Client: GenFile = /*@__PURE__*/
  fileDesc("ChRiYWNrZW5kL0NsaWVudC5wcm90bxIHYmFja2VuZCJJCgpDbGllbnRJbmZvEgsKA3VpZBgBIAEoCRIQCgh1c2VybmFtZRgCIAEoCRINCgVlbWFpbBgDIAEoCRINCgVhZG1pbhgEIAEoCCIyCgpTZXJ2ZXJMaXN0EiQKB3NlcnZlcnMYASADKAsyEy5iYWNrZW5kLlNlcnZlckluZm8i7AEKClNlcnZlckluZm8SCwoDc2lkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkSEAoIc29mdHdhcmUYBCABKAkSMQoObWFpbkFsbG9jYXRpb24YBSABKAsyFC5jb21tb24uSVBBbGxvY2F0aW9uSACIAQESKAoGc3RhdHVzGAYgASgOMhguZGFlbW9uLlNlcnZlclN0YXR1c1R5cGUSLAoNcmVzb3VyY2VVc2FnZRgHIAEoCzIVLmNvbW1vbi5SZXNvdXJjZVVzYWdlQhEKD19tYWluQWxsb2NhdGlvbjJzCg1DbGllbnRTZXJ2aWNlEi0KB0dldEluZm8SDS5jb21tb24uRW1wdHkaEy5iYWNrZW5kLkNsaWVudEluZm8SMwoNR2V0U2VydmVyTGlzdBINLmNvbW1vbi5FbXB0eRoTLmJhY2tlbmQuU2VydmVyTGlzdEIfWh1wYW5lbGl1bS9wcm90b19nZW5fZ28vYmFja2VuZGIGcHJvdG8z", [file_common, file_daemon_Server]);

/**
 * @generated from message backend.ClientInfo
 */
export type ClientInfo = Message<"backend.ClientInfo"> & {
  /**
   * @generated from field: string uid = 1;
   */
  uid: string;

  /**
   * @generated from field: string username = 2;
   */
  username: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: bool admin = 4;
   */
  admin: boolean;
};

/**
 * Describes the message backend.ClientInfo.
 * Use `create(ClientInfoSchema)` to create a new message.
 */
export const ClientInfoSchema: GenMessage<ClientInfo> = /*@__PURE__*/
  messageDesc(file_backend_Client, 0);

/**
 * @generated from message backend.ServerList
 */
export type ServerList = Message<"backend.ServerList"> & {
  /**
   * @generated from field: repeated backend.ServerInfo servers = 1;
   */
  servers: ServerInfo[];
};

/**
 * Describes the message backend.ServerList.
 * Use `create(ServerListSchema)` to create a new message.
 */
export const ServerListSchema: GenMessage<ServerList> = /*@__PURE__*/
  messageDesc(file_backend_Client, 1);

/**
 * @generated from message backend.ServerInfo
 */
export type ServerInfo = Message<"backend.ServerInfo"> & {
  /**
   * @generated from field: string sid = 1;
   */
  sid: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string software = 4;
   */
  software: string;

  /**
   * @generated from field: optional common.IPAllocation mainAllocation = 5;
   */
  mainAllocation?: IPAllocation;

  /**
   * TODO: stream
   *
   * @generated from field: daemon.ServerStatusType status = 6;
   */
  status: ServerStatusType;

  /**
   * TODO: turn into a stream later on
   *
   * @generated from field: common.ResourceUsage resourceUsage = 7;
   */
  resourceUsage?: ResourceUsage;
};

/**
 * Describes the message backend.ServerInfo.
 * Use `create(ServerInfoSchema)` to create a new message.
 */
export const ServerInfoSchema: GenMessage<ServerInfo> = /*@__PURE__*/
  messageDesc(file_backend_Client, 2);

/**
 * @generated from service backend.ClientService
 */
export const ClientService: GenService<{
  /**
   * @generated from rpc backend.ClientService.GetInfo
   */
  getInfo: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ClientInfoSchema;
  },
  /**
   * @generated from rpc backend.ClientService.GetServerList
   */
  getServerList: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ServerListSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_backend_Client, 0);


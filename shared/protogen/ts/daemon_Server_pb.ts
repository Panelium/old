// @generated by protoc-gen-es v2.5.0 with parameter "target=ts,import_extension=none,js_import_style=module"
// @generated from file daemon_Server.proto (package daemon, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EmptySchema, SimpleMessageSchema, SuccessMessageSchema } from "./common_pb";
import { file_common } from "./common_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file daemon_Server.proto.
 */
export const file_daemon_Server: GenFile = /*@__PURE__*/
  fileDesc("ChNkYWVtb25fU2VydmVyLnByb3RvEgZkYWVtb24iJgoKQWxsb2NhdGlvbhIKCgJpcBgBIAEoCRIMCgRwb3J0GAIgASgNIkgKDVJlc291cmNlTGltaXQSCwoDY3B1GAEgASgNEgsKA3JhbRgCIAEoDRIMCgRzd2FwGAMgASgNEg8KB3N0b3JhZ2UYBCABKA0iOgoNUmVzb3VyY2VVc2FnZRILCgNjcHUYASABKAISCwoDcmFtGAIgASgCEg8KB3N0b3JhZ2UYAyABKAIiqAEKE0NyZWF0ZVNlcnZlclJlcXVlc3QSEAoIc2VydmVySWQYASABKAkSJwoLYWxsb2NhdGlvbnMYAiADKAsyEi5kYWVtb24uQWxsb2NhdGlvbhIsCg1yZXNvdXJjZUxpbWl0GAMgASgLMhUuZGFlbW9uLlJlc291cmNlTGltaXQSEwoLYmx1ZXByaW50SWQYBCABKAkSEwoLZG9ja2VySW1hZ2UYBSABKAkiNgoTRGVsZXRlU2VydmVyUmVxdWVzdBIQCghzZXJ2ZXJJZBgBIAEoCRINCgVmb3JjZRgCIAEoCCKXAgoMU2VydmVyU3RhdHVzEigKBnN0YXR1cxgBIAEoDjIYLmRhZW1vbi5TZXJ2ZXJTdGF0dXNUeXBlEjcKDnRpbWVzdGFtcFN0YXJ0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEjUKDHRpbWVzdGFtcEVuZBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAYgBARI3Cg1vZmZsaW5lUmVhc29uGAQgASgOMhsuZGFlbW9uLlNlcnZlck9mZmxpbmVSZWFzb25IAogBAUIRCg9fdGltZXN0YW1wU3RhcnRCDwoNX3RpbWVzdGFtcEVuZEIQCg5fb2ZmbGluZVJlYXNvbiI5ChJQb3dlckFjdGlvbk1lc3NhZ2USIwoGYWN0aW9uGAEgASgOMhMuZGFlbW9uLlBvd2VyQWN0aW9uIjwKFFJlc291cmNlVXNhZ2VNZXNzYWdlEiQKBXVzYWdlGAIgASgLMhUuZGFlbW9uLlJlc291cmNlVXNhZ2Uq1gEKEFNlcnZlclN0YXR1c1R5cGUSHgoaU0VSVkVSX1NUQVRVU19UWVBFX1VOS05PV04QABIfChtTRVJWRVJfU1RBVFVTX1RZUEVfU1RBUlRJTkcQARIdChlTRVJWRVJfU1RBVFVTX1RZUEVfT05MSU5FEAISHwobU0VSVkVSX1NUQVRVU19UWVBFX1NUT1BQSU5HEAMSHgoaU0VSVkVSX1NUQVRVU19UWVBFX09GRkxJTkUQBBIhCh1TRVJWRVJfU1RBVFVTX1RZUEVfSU5TVEFMTElORxAFKsEBChNTZXJ2ZXJPZmZsaW5lUmVhc29uEiEKHVNFUlZFUl9PRkZMSU5FX1JFQVNPTl9VTktOT1dOEAASIQodU0VSVkVSX09GRkxJTkVfUkVBU09OX0NSRUFURUQQARIhCh1TRVJWRVJfT0ZGTElORV9SRUFTT05fU1RPUFBFRBACEiAKHFNFUlZFUl9PRkZMSU5FX1JFQVNPTl9LSUxMRUQQAxIfChtTRVJWRVJfT0ZGTElORV9SRUFTT05fRVJST1IQBCqLAQoLUG93ZXJBY3Rpb24SHAoYUE9XRVJfQUNUSU9OX1VOU1BFQ0lGSUVEEAASFgoSUE9XRVJfQUNUSU9OX1NUQVJUEAESGAoUUE9XRVJfQUNUSU9OX1JFU1RBUlQQAhIVChFQT1dFUl9BQ1RJT05fU1RPUBADEhUKEVBPV0VSX0FDVElPTl9LSUxMEAQy+gQKDVNlcnZlclNlcnZpY2USQwoMQ3JlYXRlU2VydmVyEhsuZGFlbW9uLkNyZWF0ZVNlcnZlclJlcXVlc3QaFi5jb21tb24uU3VjY2Vzc01lc3NhZ2USQwoMRGVsZXRlU2VydmVyEhsuZGFlbW9uLkRlbGV0ZVNlcnZlclJlcXVlc3QaFi5jb21tb24uU3VjY2Vzc01lc3NhZ2USOwoHQ29uc29sZRIVLmNvbW1vbi5TaW1wbGVNZXNzYWdlGhUuY29tbW9uLlNpbXBsZU1lc3NhZ2UoATABEjsKClJ1bkNvbW1hbmQSFS5jb21tb24uU2ltcGxlTWVzc2FnZRoWLmNvbW1vbi5TdWNjZXNzTWVzc2FnZRI8CghUZXJtaW5hbBIVLmNvbW1vbi5TaW1wbGVNZXNzYWdlGhUuY29tbW9uLlNpbXBsZU1lc3NhZ2UoATABEkMKElJ1blRlcm1pbmFsQ29tbWFuZBIVLmNvbW1vbi5TaW1wbGVNZXNzYWdlGhYuY29tbW9uLlN1Y2Nlc3NNZXNzYWdlEi0KBlN0YXR1cxINLmNvbW1vbi5FbXB0eRoULmRhZW1vbi5TZXJ2ZXJTdGF0dXMSPgoNUmVzb3VyY2VVc2FnZRINLmNvbW1vbi5FbXB0eRocLmRhZW1vbi5SZXNvdXJjZVVzYWdlTWVzc2FnZTABEkEKC1Bvd2VyQWN0aW9uEhouZGFlbW9uLlBvd2VyQWN0aW9uTWVzc2FnZRoWLmNvbW1vbi5TdWNjZXNzTWVzc2FnZRIwCgdJbnN0YWxsEg0uY29tbW9uLkVtcHR5GhYuY29tbW9uLlN1Y2Nlc3NNZXNzYWdlQhdaFXBhbmVsaXVtL3Byb3RvX2dlbl9nb2IGcHJvdG8z", [file_common, file_google_protobuf_timestamp]);

/**
 * @generated from message daemon.Allocation
 */
export type Allocation = Message<"daemon.Allocation"> & {
  /**
   * @generated from field: string ip = 1;
   */
  ip: string;

  /**
   * MUST BE 1024-65535
   *
   * @generated from field: uint32 port = 2;
   */
  port: number;
};

/**
 * Describes the message daemon.Allocation.
 * Use `create(AllocationSchema)` to create a new message.
 */
export const AllocationSchema: GenMessage<Allocation> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 0);

/**
 * @generated from message daemon.ResourceLimit
 */
export type ResourceLimit = Message<"daemon.ResourceLimit"> & {
  /**
   * CPU in percentage (100% = 1 vCore)
   *
   * @generated from field: uint32 cpu = 1;
   */
  cpu: number;

  /**
   * RAM in MB
   *
   * @generated from field: uint32 ram = 2;
   */
  ram: number;

  /**
   * SWAP in MB
   *
   * @generated from field: uint32 swap = 3;
   */
  swap: number;

  /**
   * Storage in MB
   *
   * @generated from field: uint32 storage = 4;
   */
  storage: number;
};

/**
 * Describes the message daemon.ResourceLimit.
 * Use `create(ResourceLimitSchema)` to create a new message.
 */
export const ResourceLimitSchema: GenMessage<ResourceLimit> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 1);

/**
 * @generated from message daemon.ResourceUsage
 */
export type ResourceUsage = Message<"daemon.ResourceUsage"> & {
  /**
   * CPU in percentage (100% = 1 vCore)
   *
   * @generated from field: float cpu = 1;
   */
  cpu: number;

  /**
   * RAM in MB
   *
   * @generated from field: float ram = 2;
   */
  ram: number;

  /**
   * Storage in MB
   *
   * @generated from field: float storage = 3;
   */
  storage: number;
};

/**
 * Describes the message daemon.ResourceUsage.
 * Use `create(ResourceUsageSchema)` to create a new message.
 */
export const ResourceUsageSchema: GenMessage<ResourceUsage> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 2);

/**
 * Server Management
 *
 * @generated from message daemon.CreateServerRequest
 */
export type CreateServerRequest = Message<"daemon.CreateServerRequest"> & {
  /**
   * @generated from field: string serverId = 1;
   */
  serverId: string;

  /**
   * @generated from field: repeated daemon.Allocation allocations = 2;
   */
  allocations: Allocation[];

  /**
   * @generated from field: daemon.ResourceLimit resourceLimit = 3;
   */
  resourceLimit?: ResourceLimit;

  /**
   * @generated from field: string blueprintId = 4;
   */
  blueprintId: string;

  /**
   * @generated from field: string dockerImage = 5;
   */
  dockerImage: string;
};

/**
 * Describes the message daemon.CreateServerRequest.
 * Use `create(CreateServerRequestSchema)` to create a new message.
 */
export const CreateServerRequestSchema: GenMessage<CreateServerRequest> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 3);

/**
 * @generated from message daemon.DeleteServerRequest
 */
export type DeleteServerRequest = Message<"daemon.DeleteServerRequest"> & {
  /**
   * @generated from field: string serverId = 1;
   */
  serverId: string;

  /**
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message daemon.DeleteServerRequest.
 * Use `create(DeleteServerRequestSchema)` to create a new message.
 */
export const DeleteServerRequestSchema: GenMessage<DeleteServerRequest> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 4);

/**
 * Server Info
 *
 * @generated from message daemon.ServerStatus
 */
export type ServerStatus = Message<"daemon.ServerStatus"> & {
  /**
   * @generated from field: daemon.ServerStatusType status = 1;
   */
  status: ServerStatusType;

  /**
   * @generated from field: optional google.protobuf.Timestamp timestampStart = 2;
   */
  timestampStart?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp timestampEnd = 3;
   */
  timestampEnd?: Timestamp;

  /**
   * @generated from field: optional daemon.ServerOfflineReason offlineReason = 4;
   */
  offlineReason?: ServerOfflineReason;
};

/**
 * Describes the message daemon.ServerStatus.
 * Use `create(ServerStatusSchema)` to create a new message.
 */
export const ServerStatusSchema: GenMessage<ServerStatus> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 5);

/**
 * @generated from message daemon.PowerActionMessage
 */
export type PowerActionMessage = Message<"daemon.PowerActionMessage"> & {
  /**
   * @generated from field: daemon.PowerAction action = 1;
   */
  action: PowerAction;
};

/**
 * Describes the message daemon.PowerActionMessage.
 * Use `create(PowerActionMessageSchema)` to create a new message.
 */
export const PowerActionMessageSchema: GenMessage<PowerActionMessage> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 6);

/**
 * @generated from message daemon.ResourceUsageMessage
 */
export type ResourceUsageMessage = Message<"daemon.ResourceUsageMessage"> & {
  /**
   * @generated from field: daemon.ResourceUsage usage = 2;
   */
  usage?: ResourceUsage;
};

/**
 * Describes the message daemon.ResourceUsageMessage.
 * Use `create(ResourceUsageMessageSchema)` to create a new message.
 */
export const ResourceUsageMessageSchema: GenMessage<ResourceUsageMessage> = /*@__PURE__*/
  messageDesc(file_daemon_Server, 7);

/**
 * @generated from enum daemon.ServerStatusType
 */
export enum ServerStatusType {
  /**
   * @generated from enum value: SERVER_STATUS_TYPE_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: SERVER_STATUS_TYPE_STARTING = 1;
   */
  STARTING = 1,

  /**
   * @generated from enum value: SERVER_STATUS_TYPE_ONLINE = 2;
   */
  ONLINE = 2,

  /**
   * @generated from enum value: SERVER_STATUS_TYPE_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * @generated from enum value: SERVER_STATUS_TYPE_OFFLINE = 4;
   */
  OFFLINE = 4,

  /**
   * @generated from enum value: SERVER_STATUS_TYPE_INSTALLING = 5;
   */
  INSTALLING = 5,
}

/**
 * Describes the enum daemon.ServerStatusType.
 */
export const ServerStatusTypeSchema: GenEnum<ServerStatusType> = /*@__PURE__*/
  enumDesc(file_daemon_Server, 0);

/**
 * @generated from enum daemon.ServerOfflineReason
 */
export enum ServerOfflineReason {
  /**
   * @generated from enum value: SERVER_OFFLINE_REASON_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * created or installed
   *
   * @generated from enum value: SERVER_OFFLINE_REASON_CREATED = 1;
   */
  CREATED = 1,

  /**
   * @generated from enum value: SERVER_OFFLINE_REASON_STOPPED = 2;
   */
  STOPPED = 2,

  /**
   * @generated from enum value: SERVER_OFFLINE_REASON_KILLED = 3;
   */
  KILLED = 3,

  /**
   * @generated from enum value: SERVER_OFFLINE_REASON_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum daemon.ServerOfflineReason.
 */
export const ServerOfflineReasonSchema: GenEnum<ServerOfflineReason> = /*@__PURE__*/
  enumDesc(file_daemon_Server, 1);

/**
 * Power Actions
 *
 * @generated from enum daemon.PowerAction
 */
export enum PowerAction {
  /**
   * Default value, should not be used
   *
   * @generated from enum value: POWER_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: POWER_ACTION_START = 1;
   */
  START = 1,

  /**
   * @generated from enum value: POWER_ACTION_RESTART = 2;
   */
  RESTART = 2,

  /**
   * @generated from enum value: POWER_ACTION_STOP = 3;
   */
  STOP = 3,

  /**
   * @generated from enum value: POWER_ACTION_KILL = 4;
   */
  KILL = 4,
}

/**
 * Describes the enum daemon.PowerAction.
 */
export const PowerActionSchema: GenEnum<PowerAction> = /*@__PURE__*/
  enumDesc(file_daemon_Server, 2);

/**
 * @generated from service daemon.ServerService
 */
export const ServerService: GenService<{
  /**
   * / Server Management
   * / - Called by backend, needs token
   *
   * @generated from rpc daemon.ServerService.CreateServer
   */
  createServer: {
    methodKind: "unary";
    input: typeof CreateServerRequestSchema;
    output: typeof SuccessMessageSchema;
  },
  /**
   * @generated from rpc daemon.ServerService.DeleteServer
   */
  deleteServer: {
    methodKind: "unary";
    input: typeof DeleteServerRequestSchema;
    output: typeof SuccessMessageSchema;
  },
  /**
   * / Server Actions - Requires a ServerID http header
   * / - Called by client, needs jwt
   * Console (process)
   *
   * @generated from rpc daemon.ServerService.Console
   */
  console: {
    methodKind: "bidi_streaming";
    input: typeof SimpleMessageSchema;
    output: typeof SimpleMessageSchema;
  },
  /**
   * @generated from rpc daemon.ServerService.RunCommand
   */
  runCommand: {
    methodKind: "unary";
    input: typeof SimpleMessageSchema;
    output: typeof SuccessMessageSchema;
  },
  /**
   * Terminal (system)
   *
   * @generated from rpc daemon.ServerService.Terminal
   */
  terminal: {
    methodKind: "bidi_streaming";
    input: typeof SimpleMessageSchema;
    output: typeof SimpleMessageSchema;
  },
  /**
   * @generated from rpc daemon.ServerService.RunTerminalCommand
   */
  runTerminalCommand: {
    methodKind: "unary";
    input: typeof SimpleMessageSchema;
    output: typeof SuccessMessageSchema;
  },
  /**
   * / - Called by backend, needs token
   * Server Info
   *
   * @generated from rpc daemon.ServerService.Status
   */
  status: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof ServerStatusSchema;
  },
  /**
   * @generated from rpc daemon.ServerService.ResourceUsage
   */
  resourceUsage: {
    methodKind: "server_streaming";
    input: typeof EmptySchema;
    output: typeof ResourceUsageMessageSchema;
  },
  /**
   * Power Actions
   *
   * @generated from rpc daemon.ServerService.PowerAction
   */
  powerAction: {
    methodKind: "unary";
    input: typeof PowerActionMessageSchema;
    output: typeof SuccessMessageSchema;
  },
  /**
   * Installation
   *
   * @generated from rpc daemon.ServerService.Install
   */
  install: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof SuccessMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_daemon_Server, 0);


openapi: 3.1.0
info:
  title: backend_admin
paths:
  /backend_admin.LocationManagerService/GetLocations:
    post:
      tags:
        - backend_admin.LocationManagerService
      summary: GetLocations
      operationId: backend_admin.LocationManagerService.GetLocations
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.GetLocationsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.GetLocationsResponse'
  /backend_admin.LocationManagerService/GetLocation:
    post:
      tags:
        - backend_admin.LocationManagerService
      summary: GetLocation
      operationId: backend_admin.LocationManagerService.GetLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.GetLocationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.GetLocationResponse'
  /backend_admin.LocationManagerService/CreateLocation:
    post:
      tags:
        - backend_admin.LocationManagerService
      summary: CreateLocation
      operationId: backend_admin.LocationManagerService.CreateLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.CreateLocationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.CreateLocationResponse'
  /backend_admin.LocationManagerService/UpdateLocation:
    post:
      tags:
        - backend_admin.LocationManagerService
      summary: UpdateLocation
      operationId: backend_admin.LocationManagerService.UpdateLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.UpdateLocationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.UpdateLocationResponse'
  /backend_admin.LocationManagerService/DeleteLocation:
    post:
      tags:
        - backend_admin.LocationManagerService
      summary: DeleteLocation
      operationId: backend_admin.LocationManagerService.DeleteLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.DeleteLocationRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.DeleteLocationResponse'
components:
  schemas:
    backend_admin.CreateLocationRequest:
      type: object
      properties:
        location:
          title: location
          $ref: '#/components/schemas/backend_admin.Location'
      title: CreateLocationRequest
      additionalProperties: false
    backend_admin.CreateLocationResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: CreateLocationResponse
      additionalProperties: false
    backend_admin.DeleteLocationRequest:
      type: object
      properties:
        lid:
          type: string
          title: lid
      title: DeleteLocationRequest
      additionalProperties: false
    backend_admin.DeleteLocationResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: DeleteLocationResponse
      additionalProperties: false
    backend_admin.GetLocationRequest:
      type: object
      properties:
        lid:
          type: string
          title: lid
      title: GetLocationRequest
      additionalProperties: false
    backend_admin.GetLocationResponse:
      type: object
      properties:
        location:
          title: location
          $ref: '#/components/schemas/backend_admin.Location'
      title: GetLocationResponse
      additionalProperties: false
    backend_admin.GetLocationsRequest:
      type: object
      properties:
        pagination:
          title: pagination
          $ref: '#/components/schemas/common.Pagination'
      title: GetLocationsRequest
      additionalProperties: false
    backend_admin.GetLocationsResponse:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/backend_admin.Location'
          title: locations
        pagination:
          title: pagination
          $ref: '#/components/schemas/common.Pagination'
      title: GetLocationsResponse
      additionalProperties: false
    backend_admin.Location:
      type: object
      properties:
        lid:
          type: string
          title: lid
          description: ignored with Create
        name:
          type: string
          title: name
      title: Location
      additionalProperties: false
    backend_admin.UpdateLocationRequest:
      type: object
      properties:
        location:
          title: location
          $ref: '#/components/schemas/backend_admin.Location'
      title: UpdateLocationRequest
      additionalProperties: false
    backend_admin.UpdateLocationResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: UpdateLocationResponse
      additionalProperties: false
    common.Pagination:
      type: object
      properties:
        page:
          type: integer
          title: page
        pageSize:
          type: integer
          title: page_size
      title: Pagination
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: backend_admin.LocationManagerService

openapi: 3.1.0
info:
  title: backend_admin
paths:
  /backend_admin.UserManagerService/GetUsers:
    post:
      tags:
        - backend_admin.UserManagerService
      summary: GetUsers
      operationId: backend_admin.UserManagerService.GetUsers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.GetUsersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.GetUsersResponse'
  /backend_admin.UserManagerService/GetUser:
    post:
      tags:
        - backend_admin.UserManagerService
      summary: GetUser
      operationId: backend_admin.UserManagerService.GetUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.GetUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.GetUserResponse'
  /backend_admin.UserManagerService/CreateUser:
    post:
      tags:
        - backend_admin.UserManagerService
      summary: CreateUser
      operationId: backend_admin.UserManagerService.CreateUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.CreateUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.CreateUserResponse'
  /backend_admin.UserManagerService/UpdateUser:
    post:
      tags:
        - backend_admin.UserManagerService
      summary: UpdateUser
      operationId: backend_admin.UserManagerService.UpdateUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.UpdateUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.UpdateUserResponse'
  /backend_admin.UserManagerService/DeleteUser:
    post:
      tags:
        - backend_admin.UserManagerService
      summary: DeleteUser
      operationId: backend_admin.UserManagerService.DeleteUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend_admin.DeleteUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend_admin.DeleteUserResponse'
components:
  schemas:
    backend_admin.CreateUserRequest:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/backend_admin.User'
      title: CreateUserRequest
      additionalProperties: false
    backend_admin.CreateUserResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: CreateUserResponse
      additionalProperties: false
    backend_admin.DeleteUserRequest:
      type: object
      properties:
        uid:
          type: string
          title: uid
      title: DeleteUserRequest
      additionalProperties: false
    backend_admin.DeleteUserResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: DeleteUserResponse
      additionalProperties: false
    backend_admin.GetUserRequest:
      type: object
      properties:
        uid:
          type: string
          title: uid
      title: GetUserRequest
      additionalProperties: false
    backend_admin.GetUserResponse:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/backend_admin.User'
      title: GetUserResponse
      additionalProperties: false
    backend_admin.GetUsersRequest:
      type: object
      properties:
        pagination:
          title: pagination
          $ref: '#/components/schemas/common.Pagination'
      title: GetUsersRequest
      additionalProperties: false
    backend_admin.GetUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/backend_admin.User'
          title: users
        pagination:
          title: pagination
          $ref: '#/components/schemas/common.Pagination'
      title: GetUsersResponse
      additionalProperties: false
    backend_admin.UpdateUserRequest:
      type: object
      properties:
        user:
          title: user
          $ref: '#/components/schemas/backend_admin.User'
      title: UpdateUserRequest
      additionalProperties: false
    backend_admin.UpdateUserResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: UpdateUserResponse
      additionalProperties: false
    backend_admin.User:
      type: object
      properties:
        uid:
          type: string
          title: uid
          description: ignored with Create
        username:
          type: string
          title: username
        email:
          type: string
          title: email
        admin:
          type: boolean
          title: admin
        setPassword:
          type: string
          title: set_password
          nullable: true
        mfaNeeded:
          type: boolean
          title: mfa_needed
      title: User
      additionalProperties: false
    common.Pagination:
      type: object
      properties:
        page:
          type: integer
          title: page
        pageSize:
          type: integer
          title: page_size
        total:
          type: integer
          title: total
          nullable: true
      title: Pagination
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: backend_admin.UserManagerService

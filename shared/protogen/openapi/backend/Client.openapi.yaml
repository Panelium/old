openapi: 3.1.0
info:
  title: backend
paths:
  /backend.ClientService/GetInfo:
    post:
      tags:
        - backend.ClientService
      summary: GetInfo
      operationId: backend.ClientService.GetInfo
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.ClientInfo'
  /backend.ClientService/GetServerList:
    post:
      tags:
        - backend.ClientService
      summary: GetServerList
      operationId: backend.ClientService.GetServerList
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.ServerList'
  /backend.ClientService/GetAvailableBlueprints:
    post:
      tags:
        - backend.ClientService
      summary: GetAvailableBlueprints
      operationId: backend.ClientService.GetAvailableBlueprints
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.AvailableBlueprints'
  /backend.ClientService/GetAvailableLocations:
    post:
      tags:
        - backend.ClientService
      summary: GetAvailableLocations
      operationId: backend.ClientService.GetAvailableLocations
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.AvailableLocations'
  /backend.ClientService/GetAvailableNodes:
    post:
      tags:
        - backend.ClientService
      summary: GetAvailableNodes
      operationId: backend.ClientService.GetAvailableNodes
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.AvailableNodes'
  /backend.ClientService/NewServer:
    post:
      tags:
        - backend.ClientService
      summary: NewServer
      operationId: backend.ClientService.NewServer
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.NewServerRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.NewServerResponse'
components:
  schemas:
    backend.AvailableBlueprint:
      type: object
      properties:
        bid:
          type: string
          title: bid
        name:
          type: string
          title: name
      title: AvailableBlueprint
      additionalProperties: false
    backend.AvailableBlueprints:
      type: object
      properties:
        blueprints:
          type: array
          items:
            $ref: '#/components/schemas/backend.AvailableBlueprint'
          title: blueprints
      title: AvailableBlueprints
      additionalProperties: false
    backend.AvailableLocation:
      type: object
      properties:
        lid:
          type: string
          title: lid
        name:
          type: string
          title: name
      title: AvailableLocation
      additionalProperties: false
    backend.AvailableLocations:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/backend.AvailableLocation'
          title: locations
      title: AvailableLocations
      additionalProperties: false
    backend.AvailableNode:
      type: object
      properties:
        nid:
          type: string
          title: nid
        lid:
          type: string
          title: lid
        name:
          type: string
          title: name
      title: AvailableNode
      additionalProperties: false
    backend.AvailableNodes:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/backend.AvailableNode'
          title: nodes
      title: AvailableNodes
      additionalProperties: false
    backend.ClientInfo:
      type: object
      properties:
        uid:
          type: string
          title: uid
        username:
          type: string
          title: username
        email:
          type: string
          title: email
        admin:
          type: boolean
          title: admin
      title: ClientInfo
      additionalProperties: false
    backend.NewServerRequest:
      type: object
      properties:
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        bid:
          type: string
          title: bid
        lid:
          type: string
          title: lid
          nullable: true
        nid:
          type: string
          title: nid
          nullable: true
      title: NewServerRequest
      additionalProperties: false
    backend.NewServerResponse:
      type: object
      properties:
        sid:
          type: string
          title: sid
      title: NewServerResponse
      additionalProperties: false
    backend.ServerInfo:
      type: object
      properties:
        sid:
          type: string
          title: sid
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        software:
          type: string
          title: software
        softwareIcon:
          type: string
          title: software_icon
        mainAllocation:
          title: main_allocation
          nullable: true
          $ref: '#/components/schemas/common.IPAllocation'
        daemonHost:
          type: string
          title: daemon_host
        resourceLimit:
          title: resource_limit
          $ref: '#/components/schemas/common.ResourceLimit'
        location:
          type: string
          title: location
      title: ServerInfo
      additionalProperties: false
    backend.ServerList:
      type: object
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/backend.ServerInfo'
          title: servers
      title: ServerList
      additionalProperties: false
    common.Empty:
      type: object
      title: Empty
      additionalProperties: false
    common.IPAllocation:
      type: object
      properties:
        ip:
          type: string
          title: ip
        port:
          type: integer
          title: port
          description: MUST BE 1024-65535
      title: IPAllocation
      additionalProperties: false
    common.ResourceLimit:
      type: object
      properties:
        cpu:
          type: integer
          title: cpu
          description: CPU in percentage (100% = 1 vCore)
        ram:
          type: integer
          title: ram
          description: RAM in MB
        swap:
          type: integer
          title: swap
          description: SWAP in MB
        storage:
          type: integer
          title: storage
          description: Storage in MB
      title: ResourceLimit
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: backend.ClientService

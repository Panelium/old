openapi: 3.1.0
info:
  title: backend
paths:
  /backend.NodeService/CreateLocation:
    post:
      tags:
        - backend.NodeService
      summary: CreateLocation
      operationId: backend.NodeService.CreateLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.LocationData'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.Location'
  /backend.NodeService/UpdateLocation:
    post:
      tags:
        - backend.NodeService
      summary: UpdateLocation
      operationId: backend.NodeService.UpdateLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.Location'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/DeleteLocation:
    post:
      tags:
        - backend.NodeService
      summary: DeleteLocation
      operationId: backend.NodeService.DeleteLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/ListLocations:
    post:
      tags:
        - backend.NodeService
      summary: ListLocations
      operationId: backend.NodeService.ListLocations
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.Locations'
  /backend.NodeService/CreateNode:
    post:
      tags:
        - backend.NodeService
      summary: CreateNode
      operationId: backend.NodeService.CreateNode
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.NodeData'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.Node'
  /backend.NodeService/UpdateNode:
    post:
      tags:
        - backend.NodeService
      summary: UpdateNode
      operationId: backend.NodeService.UpdateNode
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.Node'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/DeleteNode:
    post:
      tags:
        - backend.NodeService
      summary: DeleteNode
      operationId: backend.NodeService.DeleteNode
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/ListNodes:
    post:
      tags:
        - backend.NodeService
      summary: ListNodes
      operationId: backend.NodeService.ListNodes
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.Empty'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.Nodes'
  /backend.NodeService/ListNodesByLocation:
    post:
      tags:
        - backend.NodeService
      summary: ListNodesByLocation
      operationId: backend.NodeService.ListNodesByLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.Nodes'
  /backend.NodeService/CreateNodeAllocation:
    post:
      tags:
        - backend.NodeService
      summary: CreateNodeAllocation
      operationId: backend.NodeService.CreateNodeAllocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.NodeAllocationData'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.NodeAllocation'
  /backend.NodeService/UpdateNodeAllocation:
    post:
      tags:
        - backend.NodeService
      summary: UpdateNodeAllocation
      operationId: backend.NodeService.UpdateNodeAllocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backend.NodeAllocation'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/DeleteNodeAllocation:
    post:
      tags:
        - backend.NodeService
      summary: DeleteNodeAllocation
      operationId: backend.NodeService.DeleteNodeAllocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/common.SuccessMessage'
  /backend.NodeService/ListNodeAllocationsByNode:
    post:
      tags:
        - backend.NodeService
      summary: ListNodeAllocationsByNode
      operationId: backend.NodeService.ListNodeAllocationsByNode
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.NodeAllocations'
  /backend.NodeService/ListNodeAllocationsByLocation:
    post:
      tags:
        - backend.NodeService
      summary: ListNodeAllocationsByLocation
      operationId: backend.NodeService.ListNodeAllocationsByLocation
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/common.SimpleIDMessage'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backend.NodeAllocations'
components:
  schemas:
    backend.Location:
      type: object
      properties:
        lid:
          type: string
          title: lid
        data:
          title: data
          $ref: '#/components/schemas/backend.LocationData'
      title: Location
      additionalProperties: false
    backend.LocationData:
      type: object
      properties:
        name:
          type: string
          title: name
      title: LocationData
      additionalProperties: false
    backend.Locations:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/backend.Location'
          title: locations
      title: Locations
      additionalProperties: false
    backend.Node:
      type: object
      properties:
        nid:
          type: string
          title: nid
        data:
          title: data
          $ref: '#/components/schemas/backend.NodeData'
      title: Node
      additionalProperties: false
    backend.NodeAllocation:
      type: object
      properties:
        nid:
          type: string
          title: nid
        data:
          title: data
          $ref: '#/components/schemas/backend.NodeAllocationData'
      title: NodeAllocation
      additionalProperties: false
    backend.NodeAllocationData:
      type: object
      properties:
        nid:
          type: string
          title: nid
        allocation:
          title: allocation
          $ref: '#/components/schemas/common.IPAllocation'
        sid:
          type: string
          title: sid
          nullable: true
      title: NodeAllocationData
      additionalProperties: false
    backend.NodeAllocations:
      type: object
      properties:
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/backend.NodeAllocation'
          title: allocations
      title: NodeAllocations
      additionalProperties: false
    backend.NodeData:
      type: object
      properties:
        name:
          type: string
          title: name
        fqdn:
          type: string
          title: fqdn
        lid:
          type: string
          title: lid
        resourceLimit:
          title: resource_limit
          $ref: '#/components/schemas/common.ResourceLimit'
      title: NodeData
      additionalProperties: false
    backend.Nodes:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/backend.Node'
          title: nodes
      title: Nodes
      additionalProperties: false
    common.Empty:
      type: object
      title: Empty
      additionalProperties: false
    common.IPAllocation:
      type: object
      properties:
        ip:
          type: string
          title: ip
        port:
          type: integer
          title: port
          description: MUST BE 1024-65535
      title: IPAllocation
      additionalProperties: false
    common.ResourceLimit:
      type: object
      properties:
        cpu:
          type: integer
          title: cpu
          description: CPU in percentage (100% = 1 vCore)
        ram:
          type: integer
          title: ram
          description: RAM in MB
        swap:
          type: integer
          title: swap
          description: SWAP in MB
        storage:
          type: integer
          title: storage
          description: Storage in MB
      title: ResourceLimit
      additionalProperties: false
    common.SimpleIDMessage:
      type: object
      properties:
        id:
          type: string
          title: id
      title: SimpleIDMessage
      additionalProperties: false
    common.SuccessMessage:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: SuccessMessage
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: backend.NodeService

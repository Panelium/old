// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: daemon/ServerFiles.proto

package daemon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	_ "panelium/proto_gen_go"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Compression operations
type CompressionFormat int32

const (
	CompressionFormat_COMPRESSION_FORMAT_UNSPECIFIED CompressionFormat = 0 // Default value, should not be used
	CompressionFormat_COMPRESSION_FORMAT_ZIP         CompressionFormat = 1
	CompressionFormat_COMPRESSION_FORMAT_TAR         CompressionFormat = 2
	CompressionFormat_COMPRESSION_FORMAT_GZIP        CompressionFormat = 3
)

// Enum value maps for CompressionFormat.
var (
	CompressionFormat_name = map[int32]string{
		0: "COMPRESSION_FORMAT_UNSPECIFIED",
		1: "COMPRESSION_FORMAT_ZIP",
		2: "COMPRESSION_FORMAT_TAR",
		3: "COMPRESSION_FORMAT_GZIP",
	}
	CompressionFormat_value = map[string]int32{
		"COMPRESSION_FORMAT_UNSPECIFIED": 0,
		"COMPRESSION_FORMAT_ZIP":         1,
		"COMPRESSION_FORMAT_TAR":         2,
		"COMPRESSION_FORMAT_GZIP":        3,
	}
)

func (x CompressionFormat) Enum() *CompressionFormat {
	p := new(CompressionFormat)
	*p = x
	return p
}

func (x CompressionFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_daemon_ServerFiles_proto_enumTypes[0].Descriptor()
}

func (CompressionFormat) Type() protoreflect.EnumType {
	return &file_daemon_ServerFiles_proto_enumTypes[0]
}

func (x CompressionFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionFormat.Descriptor instead.
func (CompressionFormat) EnumDescriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{0}
}

type FileEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsDirectory   bool                   `protobuf:"varint,2,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEntry) Reset() {
	*x = FileEntry{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEntry) ProtoMessage() {}

func (x *FileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEntry.ProtoReflect.Descriptor instead.
func (*FileEntry) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{0}
}

func (x *FileEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileEntry) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

func (x *FileEntry) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileEntry) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

// Directory operations
type ListDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{1}
}

func (x *ListDirectoryRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ListDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileEntry           `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{2}
}

func (x *ListDirectoryResponse) GetFiles() []*FileEntry {
	if x != nil {
		return x.Files
	}
	return nil
}

type CreateDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryRequest) Reset() {
	*x = CreateDirectoryRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryRequest) ProtoMessage() {}

func (x *CreateDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDirectoryRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CreateDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CreateDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryResponse) Reset() {
	*x = CreateDirectoryResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryResponse) ProtoMessage() {}

func (x *CreateDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDirectoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetDirectorySizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDirectorySizeRequest) Reset() {
	*x = GetDirectorySizeRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDirectorySizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectorySizeRequest) ProtoMessage() {}

func (x *GetDirectorySizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectorySizeRequest.ProtoReflect.Descriptor instead.
func (*GetDirectorySizeRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{5}
}

func (x *GetDirectorySizeRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetDirectorySizeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetDirectorySizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDirectorySizeResponse) Reset() {
	*x = GetDirectorySizeResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDirectorySizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectorySizeResponse) ProtoMessage() {}

func (x *GetDirectorySizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectorySizeResponse.ProtoReflect.Descriptor instead.
func (*GetDirectorySizeResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{6}
}

func (x *GetDirectorySizeResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// File operations
type ReadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{7}
}

func (x *ReadFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ReadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	FileInfo      *FileEntry             `protobuf:"bytes,2,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileResponse) Reset() {
	*x = ReadFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileResponse) ProtoMessage() {}

func (x *ReadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileResponse.ProtoReflect.Descriptor instead.
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{8}
}

func (x *ReadFileResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReadFileResponse) GetFileInfo() *FileEntry {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type WriteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileRequest) Reset() {
	*x = WriteFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileRequest) ProtoMessage() {}

func (x *WriteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileRequest.ProtoReflect.Descriptor instead.
func (*WriteFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{9}
}

func (x *WriteFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *WriteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type WriteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileResponse) Reset() {
	*x = WriteFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileResponse) ProtoMessage() {}

func (x *WriteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileResponse.ProtoReflect.Descriptor instead.
func (*WriteFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{10}
}

func (x *WriteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DeleteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Movement operations
type MoveFileRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerId        string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	SourcePath      string                 `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string                 `protobuf:"bytes,3,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MoveFileRequest) Reset() {
	*x = MoveFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRequest) ProtoMessage() {}

func (x *MoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRequest.ProtoReflect.Descriptor instead.
func (*MoveFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{13}
}

func (x *MoveFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *MoveFileRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *MoveFileRequest) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

type MoveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileResponse) Reset() {
	*x = MoveFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileResponse) ProtoMessage() {}

func (x *MoveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileResponse.ProtoReflect.Descriptor instead.
func (*MoveFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{14}
}

func (x *MoveFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CopyFileRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerId        string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	SourcePath      string                 `protobuf:"bytes,2,opt,name=source_path,json=sourcePath,proto3" json:"source_path,omitempty"`
	DestinationPath string                 `protobuf:"bytes,3,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CopyFileRequest) Reset() {
	*x = CopyFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileRequest) ProtoMessage() {}

func (x *CopyFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileRequest.ProtoReflect.Descriptor instead.
func (*CopyFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{15}
}

func (x *CopyFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CopyFileRequest) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *CopyFileRequest) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

type CopyFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyFileResponse) Reset() {
	*x = CopyFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyFileResponse) ProtoMessage() {}

func (x *CopyFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyFileResponse.ProtoReflect.Descriptor instead.
func (*CopyFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{16}
}

func (x *CopyFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CompressFileRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerId        string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path            string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	DestinationPath string                 `protobuf:"bytes,3,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	Format          CompressionFormat      `protobuf:"varint,4,opt,name=format,proto3,enum=daemon.CompressionFormat" json:"format,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CompressFileRequest) Reset() {
	*x = CompressFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompressFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressFileRequest) ProtoMessage() {}

func (x *CompressFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressFileRequest.ProtoReflect.Descriptor instead.
func (*CompressFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{17}
}

func (x *CompressFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *CompressFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CompressFileRequest) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

func (x *CompressFileRequest) GetFormat() CompressionFormat {
	if x != nil {
		return x.Format
	}
	return CompressionFormat_COMPRESSION_FORMAT_UNSPECIFIED
}

type CompressFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompressFileResponse) Reset() {
	*x = CompressFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompressFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressFileResponse) ProtoMessage() {}

func (x *CompressFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressFileResponse.ProtoReflect.Descriptor instead.
func (*CompressFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{18}
}

func (x *CompressFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DecompressFileRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerId        string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path            string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	DestinationPath string                 `protobuf:"bytes,3,opt,name=destination_path,json=destinationPath,proto3" json:"destination_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DecompressFileRequest) Reset() {
	*x = DecompressFileRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecompressFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecompressFileRequest) ProtoMessage() {}

func (x *DecompressFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecompressFileRequest.ProtoReflect.Descriptor instead.
func (*DecompressFileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{19}
}

func (x *DecompressFileRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *DecompressFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DecompressFileRequest) GetDestinationPath() string {
	if x != nil {
		return x.DestinationPath
	}
	return ""
}

type DecompressFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecompressFileResponse) Reset() {
	*x = DecompressFileResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecompressFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecompressFileResponse) ProtoMessage() {}

func (x *DecompressFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecompressFileResponse.ProtoReflect.Descriptor instead.
func (*DecompressFileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{20}
}

func (x *DecompressFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// File permissions operations
type ChangeFilePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Permissions   uint32                 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeFilePermissionsRequest) Reset() {
	*x = ChangeFilePermissionsRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeFilePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeFilePermissionsRequest) ProtoMessage() {}

func (x *ChangeFilePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeFilePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ChangeFilePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{21}
}

func (x *ChangeFilePermissionsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ChangeFilePermissionsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ChangeFilePermissionsRequest) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

type ChangeFilePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeFilePermissionsResponse) Reset() {
	*x = ChangeFilePermissionsResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeFilePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeFilePermissionsResponse) ProtoMessage() {}

func (x *ChangeFilePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeFilePermissionsResponse.ProtoReflect.Descriptor instead.
func (*ChangeFilePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{22}
}

func (x *ChangeFilePermissionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetFilePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFilePermissionsRequest) Reset() {
	*x = GetFilePermissionsRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFilePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilePermissionsRequest) ProtoMessage() {}

func (x *GetFilePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetFilePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{23}
}

func (x *GetFilePermissionsRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *GetFilePermissionsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetFilePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   uint32                 `protobuf:"varint,1,opt,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFilePermissionsResponse) Reset() {
	*x = GetFilePermissionsResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFilePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilePermissionsResponse) ProtoMessage() {}

func (x *GetFilePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetFilePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{24}
}

func (x *GetFilePermissionsResponse) GetPermissions() uint32 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

type SearchFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFilesRequest) Reset() {
	*x = SearchFilesRequest{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilesRequest) ProtoMessage() {}

func (x *SearchFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilesRequest.ProtoReflect.Descriptor instead.
func (*SearchFilesRequest) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{25}
}

func (x *SearchFilesRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SearchFilesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchFilesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SearchFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*FileEntry           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFilesResponse) Reset() {
	*x = SearchFilesResponse{}
	mi := &file_daemon_ServerFiles_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilesResponse) ProtoMessage() {}

func (x *SearchFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_ServerFiles_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilesResponse.ProtoReflect.Descriptor instead.
func (*SearchFilesResponse) Descriptor() ([]byte, []int) {
	return file_daemon_ServerFiles_proto_rawDescGZIP(), []int{26}
}

func (x *SearchFilesResponse) GetResults() []*FileEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_daemon_ServerFiles_proto protoreflect.FileDescriptor

const file_daemon_ServerFiles_proto_rawDesc = "" +
	"\n" +
	"\x18daemon/ServerFiles.proto\x12\x06daemon\x1a\fcommon.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x97\x01\n" +
	"\tFileEntry\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12!\n" +
	"\fis_directory\x18\x02 \x01(\bR\visDirectory\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12?\n" +
	"\rlast_modified\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\"G\n" +
	"\x14ListDirectoryRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"@\n" +
	"\x15ListDirectoryResponse\x12'\n" +
	"\x05files\x18\x01 \x03(\v2\x11.daemon.FileEntryR\x05files\"I\n" +
	"\x16CreateDirectoryRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"3\n" +
	"\x17CreateDirectoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"J\n" +
	"\x17GetDirectorySizeRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\".\n" +
	"\x18GetDirectorySizeResponse\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x03R\x04size\"B\n" +
	"\x0fReadFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"\\\n" +
	"\x10ReadFileResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12.\n" +
	"\tfile_info\x18\x02 \x01(\v2\x11.daemon.FileEntryR\bfileInfo\"]\n" +
	"\x10WriteFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\"-\n" +
	"\x11WriteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"D\n" +
	"\x11DeleteFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\".\n" +
	"\x12DeleteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"z\n" +
	"\x0fMoveFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vsource_path\x18\x02 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x03 \x01(\tR\x0fdestinationPath\",\n" +
	"\x10MoveFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"z\n" +
	"\x0fCopyFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vsource_path\x18\x02 \x01(\tR\n" +
	"sourcePath\x12)\n" +
	"\x10destination_path\x18\x03 \x01(\tR\x0fdestinationPath\",\n" +
	"\x10CopyFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xa4\x01\n" +
	"\x13CompressFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12)\n" +
	"\x10destination_path\x18\x03 \x01(\tR\x0fdestinationPath\x121\n" +
	"\x06format\x18\x04 \x01(\x0e2\x19.daemon.CompressionFormatR\x06format\"0\n" +
	"\x14CompressFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"s\n" +
	"\x15DecompressFileRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12)\n" +
	"\x10destination_path\x18\x03 \x01(\tR\x0fdestinationPath\"2\n" +
	"\x16DecompressFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"q\n" +
	"\x1cChangeFilePermissionsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12 \n" +
	"\vpermissions\x18\x03 \x01(\rR\vpermissions\"9\n" +
	"\x1dChangeFilePermissionsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"L\n" +
	"\x19GetFilePermissionsRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\">\n" +
	"\x1aGetFilePermissionsResponse\x12 \n" +
	"\vpermissions\x18\x01 \x01(\rR\vpermissions\"[\n" +
	"\x12SearchFilesRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\"B\n" +
	"\x13SearchFilesResponse\x12+\n" +
	"\aresults\x18\x01 \x03(\v2\x11.daemon.FileEntryR\aresults*\x8c\x01\n" +
	"\x11CompressionFormat\x12\"\n" +
	"\x1eCOMPRESSION_FORMAT_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16COMPRESSION_FORMAT_ZIP\x10\x01\x12\x1a\n" +
	"\x16COMPRESSION_FORMAT_TAR\x10\x02\x12\x1b\n" +
	"\x17COMPRESSION_FORMAT_GZIP\x10\x032\xf8\a\n" +
	"\x12ServerFilesService\x12L\n" +
	"\rListDirectory\x12\x1c.daemon.ListDirectoryRequest\x1a\x1d.daemon.ListDirectoryResponse\x12R\n" +
	"\x0fCreateDirectory\x12\x1e.daemon.CreateDirectoryRequest\x1a\x1f.daemon.CreateDirectoryResponse\x12U\n" +
	"\x10GetDirectorySize\x12\x1f.daemon.GetDirectorySizeRequest\x1a .daemon.GetDirectorySizeResponse\x12=\n" +
	"\bReadFile\x12\x17.daemon.ReadFileRequest\x1a\x18.daemon.ReadFileResponse\x12@\n" +
	"\tWriteFile\x12\x18.daemon.WriteFileRequest\x1a\x19.daemon.WriteFileResponse\x12C\n" +
	"\n" +
	"DeleteFile\x12\x19.daemon.DeleteFileRequest\x1a\x1a.daemon.DeleteFileResponse\x12=\n" +
	"\bMoveFile\x12\x17.daemon.MoveFileRequest\x1a\x18.daemon.MoveFileResponse\x12=\n" +
	"\bCopyFile\x12\x17.daemon.CopyFileRequest\x1a\x18.daemon.CopyFileResponse\x12I\n" +
	"\fCompressFile\x12\x1b.daemon.CompressFileRequest\x1a\x1c.daemon.CompressFileResponse\x12O\n" +
	"\x0eDecompressFile\x12\x1d.daemon.DecompressFileRequest\x1a\x1e.daemon.DecompressFileResponse\x12d\n" +
	"\x15ChangeFilePermissions\x12$.daemon.ChangeFilePermissionsRequest\x1a%.daemon.ChangeFilePermissionsResponse\x12[\n" +
	"\x12GetFilePermissions\x12!.daemon.GetFilePermissionsRequest\x1a\".daemon.GetFilePermissionsResponse\x12F\n" +
	"\vSearchFiles\x12\x1a.daemon.SearchFilesRequest\x1a\x1b.daemon.SearchFilesResponseB\x1eZ\x1cpanelium/proto_gen_go/daemonb\x06proto3"

var (
	file_daemon_ServerFiles_proto_rawDescOnce sync.Once
	file_daemon_ServerFiles_proto_rawDescData []byte
)

func file_daemon_ServerFiles_proto_rawDescGZIP() []byte {
	file_daemon_ServerFiles_proto_rawDescOnce.Do(func() {
		file_daemon_ServerFiles_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_daemon_ServerFiles_proto_rawDesc), len(file_daemon_ServerFiles_proto_rawDesc)))
	})
	return file_daemon_ServerFiles_proto_rawDescData
}

var file_daemon_ServerFiles_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_daemon_ServerFiles_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_daemon_ServerFiles_proto_goTypes = []any{
	(CompressionFormat)(0),                // 0: daemon.CompressionFormat
	(*FileEntry)(nil),                     // 1: daemon.FileEntry
	(*ListDirectoryRequest)(nil),          // 2: daemon.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),         // 3: daemon.ListDirectoryResponse
	(*CreateDirectoryRequest)(nil),        // 4: daemon.CreateDirectoryRequest
	(*CreateDirectoryResponse)(nil),       // 5: daemon.CreateDirectoryResponse
	(*GetDirectorySizeRequest)(nil),       // 6: daemon.GetDirectorySizeRequest
	(*GetDirectorySizeResponse)(nil),      // 7: daemon.GetDirectorySizeResponse
	(*ReadFileRequest)(nil),               // 8: daemon.ReadFileRequest
	(*ReadFileResponse)(nil),              // 9: daemon.ReadFileResponse
	(*WriteFileRequest)(nil),              // 10: daemon.WriteFileRequest
	(*WriteFileResponse)(nil),             // 11: daemon.WriteFileResponse
	(*DeleteFileRequest)(nil),             // 12: daemon.DeleteFileRequest
	(*DeleteFileResponse)(nil),            // 13: daemon.DeleteFileResponse
	(*MoveFileRequest)(nil),               // 14: daemon.MoveFileRequest
	(*MoveFileResponse)(nil),              // 15: daemon.MoveFileResponse
	(*CopyFileRequest)(nil),               // 16: daemon.CopyFileRequest
	(*CopyFileResponse)(nil),              // 17: daemon.CopyFileResponse
	(*CompressFileRequest)(nil),           // 18: daemon.CompressFileRequest
	(*CompressFileResponse)(nil),          // 19: daemon.CompressFileResponse
	(*DecompressFileRequest)(nil),         // 20: daemon.DecompressFileRequest
	(*DecompressFileResponse)(nil),        // 21: daemon.DecompressFileResponse
	(*ChangeFilePermissionsRequest)(nil),  // 22: daemon.ChangeFilePermissionsRequest
	(*ChangeFilePermissionsResponse)(nil), // 23: daemon.ChangeFilePermissionsResponse
	(*GetFilePermissionsRequest)(nil),     // 24: daemon.GetFilePermissionsRequest
	(*GetFilePermissionsResponse)(nil),    // 25: daemon.GetFilePermissionsResponse
	(*SearchFilesRequest)(nil),            // 26: daemon.SearchFilesRequest
	(*SearchFilesResponse)(nil),           // 27: daemon.SearchFilesResponse
	(*timestamppb.Timestamp)(nil),         // 28: google.protobuf.Timestamp
}
var file_daemon_ServerFiles_proto_depIdxs = []int32{
	28, // 0: daemon.FileEntry.last_modified:type_name -> google.protobuf.Timestamp
	1,  // 1: daemon.ListDirectoryResponse.files:type_name -> daemon.FileEntry
	1,  // 2: daemon.ReadFileResponse.file_info:type_name -> daemon.FileEntry
	0,  // 3: daemon.CompressFileRequest.format:type_name -> daemon.CompressionFormat
	1,  // 4: daemon.SearchFilesResponse.results:type_name -> daemon.FileEntry
	2,  // 5: daemon.ServerFilesService.ListDirectory:input_type -> daemon.ListDirectoryRequest
	4,  // 6: daemon.ServerFilesService.CreateDirectory:input_type -> daemon.CreateDirectoryRequest
	6,  // 7: daemon.ServerFilesService.GetDirectorySize:input_type -> daemon.GetDirectorySizeRequest
	8,  // 8: daemon.ServerFilesService.ReadFile:input_type -> daemon.ReadFileRequest
	10, // 9: daemon.ServerFilesService.WriteFile:input_type -> daemon.WriteFileRequest
	12, // 10: daemon.ServerFilesService.DeleteFile:input_type -> daemon.DeleteFileRequest
	14, // 11: daemon.ServerFilesService.MoveFile:input_type -> daemon.MoveFileRequest
	16, // 12: daemon.ServerFilesService.CopyFile:input_type -> daemon.CopyFileRequest
	18, // 13: daemon.ServerFilesService.CompressFile:input_type -> daemon.CompressFileRequest
	20, // 14: daemon.ServerFilesService.DecompressFile:input_type -> daemon.DecompressFileRequest
	22, // 15: daemon.ServerFilesService.ChangeFilePermissions:input_type -> daemon.ChangeFilePermissionsRequest
	24, // 16: daemon.ServerFilesService.GetFilePermissions:input_type -> daemon.GetFilePermissionsRequest
	26, // 17: daemon.ServerFilesService.SearchFiles:input_type -> daemon.SearchFilesRequest
	3,  // 18: daemon.ServerFilesService.ListDirectory:output_type -> daemon.ListDirectoryResponse
	5,  // 19: daemon.ServerFilesService.CreateDirectory:output_type -> daemon.CreateDirectoryResponse
	7,  // 20: daemon.ServerFilesService.GetDirectorySize:output_type -> daemon.GetDirectorySizeResponse
	9,  // 21: daemon.ServerFilesService.ReadFile:output_type -> daemon.ReadFileResponse
	11, // 22: daemon.ServerFilesService.WriteFile:output_type -> daemon.WriteFileResponse
	13, // 23: daemon.ServerFilesService.DeleteFile:output_type -> daemon.DeleteFileResponse
	15, // 24: daemon.ServerFilesService.MoveFile:output_type -> daemon.MoveFileResponse
	17, // 25: daemon.ServerFilesService.CopyFile:output_type -> daemon.CopyFileResponse
	19, // 26: daemon.ServerFilesService.CompressFile:output_type -> daemon.CompressFileResponse
	21, // 27: daemon.ServerFilesService.DecompressFile:output_type -> daemon.DecompressFileResponse
	23, // 28: daemon.ServerFilesService.ChangeFilePermissions:output_type -> daemon.ChangeFilePermissionsResponse
	25, // 29: daemon.ServerFilesService.GetFilePermissions:output_type -> daemon.GetFilePermissionsResponse
	27, // 30: daemon.ServerFilesService.SearchFiles:output_type -> daemon.SearchFilesResponse
	18, // [18:31] is the sub-list for method output_type
	5,  // [5:18] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_daemon_ServerFiles_proto_init() }
func file_daemon_ServerFiles_proto_init() {
	if File_daemon_ServerFiles_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_daemon_ServerFiles_proto_rawDesc), len(file_daemon_ServerFiles_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_daemon_ServerFiles_proto_goTypes,
		DependencyIndexes: file_daemon_ServerFiles_proto_depIdxs,
		EnumInfos:         file_daemon_ServerFiles_proto_enumTypes,
		MessageInfos:      file_daemon_ServerFiles_proto_msgTypes,
	}.Build()
	File_daemon_ServerFiles_proto = out.File
	file_daemon_ServerFiles_proto_goTypes = nil
	file_daemon_ServerFiles_proto_depIdxs = nil
}

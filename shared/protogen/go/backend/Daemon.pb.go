// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: backend/Daemon.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	proto_gen_go "panelium/proto_gen_go"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackendToken  string                 `protobuf:"bytes,1,opt,name=backend_token,json=backendToken,proto3" json:"backend_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTokenResponse) Reset() {
	*x = CreateTokenResponse{}
	mi := &file_backend_Daemon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTokenResponse) ProtoMessage() {}

func (x *CreateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Daemon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateTokenResponse) Descriptor() ([]byte, []int) {
	return file_backend_Daemon_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTokenResponse) GetBackendToken() string {
	if x != nil {
		return x.BackendToken
	}
	return ""
}

type RegisterDaemonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackendToken  string                 `protobuf:"bytes,1,opt,name=backend_token,json=backendToken,proto3" json:"backend_token,omitempty"`
	NodeToken     string                 `protobuf:"bytes,2,opt,name=node_token,json=nodeToken,proto3" json:"node_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDaemonRequest) Reset() {
	*x = RegisterDaemonRequest{}
	mi := &file_backend_Daemon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDaemonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDaemonRequest) ProtoMessage() {}

func (x *RegisterDaemonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Daemon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDaemonRequest.ProtoReflect.Descriptor instead.
func (*RegisterDaemonRequest) Descriptor() ([]byte, []int) {
	return file_backend_Daemon_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDaemonRequest) GetBackendToken() string {
	if x != nil {
		return x.BackendToken
	}
	return ""
}

func (x *RegisterDaemonRequest) GetNodeToken() string {
	if x != nil {
		return x.NodeToken
	}
	return ""
}

type Blueprint struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Bid                    string                 `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	Version                uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Flags                  []string               `protobuf:"bytes,3,rep,name=flags,proto3" json:"flags,omitempty"`
	DockerImages           []string               `protobuf:"bytes,4,rep,name=docker_images,json=dockerImages,proto3" json:"docker_images,omitempty"` // only the uri
	BlockedFiles           []*BlockedFile         `protobuf:"bytes,5,rep,name=blocked_files,json=blockedFiles,proto3" json:"blocked_files,omitempty"`
	ServerBinary           string                 `protobuf:"bytes,6,opt,name=server_binary,json=serverBinary,proto3" json:"server_binary,omitempty"`
	StartCommand           string                 `protobuf:"bytes,7,opt,name=start_command,json=startCommand,proto3" json:"start_command,omitempty"`
	StopCommand            string                 `protobuf:"bytes,8,opt,name=stop_command,json=stopCommand,proto3" json:"stop_command,omitempty"`
	SetupScriptBase64      string                 `protobuf:"bytes,9,opt,name=setup_script_base64,json=setupScriptBase64,proto3" json:"setup_script_base64,omitempty"`
	SetupDockerImage       string                 `protobuf:"bytes,10,opt,name=setup_docker_image,json=setupDockerImage,proto3" json:"setup_docker_image,omitempty"`
	SetupScriptInterpreter string                 `protobuf:"bytes,11,opt,name=setup_script_interpreter,json=setupScriptInterpreter,proto3" json:"setup_script_interpreter,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Blueprint) Reset() {
	*x = Blueprint{}
	mi := &file_backend_Daemon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blueprint) ProtoMessage() {}

func (x *Blueprint) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Daemon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blueprint.ProtoReflect.Descriptor instead.
func (*Blueprint) Descriptor() ([]byte, []int) {
	return file_backend_Daemon_proto_rawDescGZIP(), []int{2}
}

func (x *Blueprint) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Blueprint) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Blueprint) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Blueprint) GetDockerImages() []string {
	if x != nil {
		return x.DockerImages
	}
	return nil
}

func (x *Blueprint) GetBlockedFiles() []*BlockedFile {
	if x != nil {
		return x.BlockedFiles
	}
	return nil
}

func (x *Blueprint) GetServerBinary() string {
	if x != nil {
		return x.ServerBinary
	}
	return ""
}

func (x *Blueprint) GetStartCommand() string {
	if x != nil {
		return x.StartCommand
	}
	return ""
}

func (x *Blueprint) GetStopCommand() string {
	if x != nil {
		return x.StopCommand
	}
	return ""
}

func (x *Blueprint) GetSetupScriptBase64() string {
	if x != nil {
		return x.SetupScriptBase64
	}
	return ""
}

func (x *Blueprint) GetSetupDockerImage() string {
	if x != nil {
		return x.SetupDockerImage
	}
	return ""
}

func (x *Blueprint) GetSetupScriptInterpreter() string {
	if x != nil {
		return x.SetupScriptInterpreter
	}
	return ""
}

type BlockedFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          string                 `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Visible       bool                   `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	Readable      bool                   `protobuf:"varint,3,opt,name=readable,proto3" json:"readable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockedFile) Reset() {
	*x = BlockedFile{}
	mi := &file_backend_Daemon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockedFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockedFile) ProtoMessage() {}

func (x *BlockedFile) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Daemon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockedFile.ProtoReflect.Descriptor instead.
func (*BlockedFile) Descriptor() ([]byte, []int) {
	return file_backend_Daemon_proto_rawDescGZIP(), []int{3}
}

func (x *BlockedFile) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *BlockedFile) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *BlockedFile) GetReadable() bool {
	if x != nil {
		return x.Readable
	}
	return false
}

type Server struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Sid           string                       `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	OwnerId       string                       `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	UserIds       []string                     `protobuf:"bytes,3,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Allocations   []*proto_gen_go.IPAllocation `protobuf:"bytes,4,rep,name=allocations,proto3" json:"allocations,omitempty"`
	ResourceLimit *proto_gen_go.ResourceLimit  `protobuf:"bytes,5,opt,name=resource_limit,json=resourceLimit,proto3" json:"resource_limit,omitempty"`
	DockerImage   string                       `protobuf:"bytes,6,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	Bid           string                       `protobuf:"bytes,7,opt,name=bid,proto3" json:"bid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_backend_Daemon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Daemon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_backend_Daemon_proto_rawDescGZIP(), []int{4}
}

func (x *Server) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *Server) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Server) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *Server) GetAllocations() []*proto_gen_go.IPAllocation {
	if x != nil {
		return x.Allocations
	}
	return nil
}

func (x *Server) GetResourceLimit() *proto_gen_go.ResourceLimit {
	if x != nil {
		return x.ResourceLimit
	}
	return nil
}

func (x *Server) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *Server) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

var File_backend_Daemon_proto protoreflect.FileDescriptor

const file_backend_Daemon_proto_rawDesc = "" +
	"\n" +
	"\x14backend/Daemon.proto\x12\abackend\x1a\fcommon.proto\":\n" +
	"\x13CreateTokenResponse\x12#\n" +
	"\rbackend_token\x18\x01 \x01(\tR\fbackendToken\"[\n" +
	"\x15RegisterDaemonRequest\x12#\n" +
	"\rbackend_token\x18\x01 \x01(\tR\fbackendToken\x12\x1d\n" +
	"\n" +
	"node_token\x18\x02 \x01(\tR\tnodeToken\"\xb2\x03\n" +
	"\tBlueprint\x12\x10\n" +
	"\x03bid\x18\x01 \x01(\tR\x03bid\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12\x14\n" +
	"\x05flags\x18\x03 \x03(\tR\x05flags\x12#\n" +
	"\rdocker_images\x18\x04 \x03(\tR\fdockerImages\x129\n" +
	"\rblocked_files\x18\x05 \x03(\v2\x14.backend.BlockedFileR\fblockedFiles\x12#\n" +
	"\rserver_binary\x18\x06 \x01(\tR\fserverBinary\x12#\n" +
	"\rstart_command\x18\a \x01(\tR\fstartCommand\x12!\n" +
	"\fstop_command\x18\b \x01(\tR\vstopCommand\x12.\n" +
	"\x13setup_script_base64\x18\t \x01(\tR\x11setupScriptBase64\x12,\n" +
	"\x12setup_docker_image\x18\n" +
	" \x01(\tR\x10setupDockerImage\x128\n" +
	"\x18setup_script_interpreter\x18\v \x01(\tR\x16setupScriptInterpreter\"W\n" +
	"\vBlockedFile\x12\x12\n" +
	"\x04file\x18\x01 \x01(\tR\x04file\x12\x18\n" +
	"\avisible\x18\x02 \x01(\bR\avisible\x12\x1a\n" +
	"\breadable\x18\x03 \x01(\bR\breadable\"\xfb\x01\n" +
	"\x06Server\x12\x10\n" +
	"\x03sid\x18\x01 \x01(\tR\x03sid\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12\x19\n" +
	"\buser_ids\x18\x03 \x03(\tR\auserIds\x126\n" +
	"\vallocations\x18\x04 \x03(\v2\x14.common.IPAllocationR\vallocations\x12<\n" +
	"\x0eresource_limit\x18\x05 \x01(\v2\x15.common.ResourceLimitR\rresourceLimit\x12!\n" +
	"\fdocker_image\x18\x06 \x01(\tR\vdockerImage\x12\x10\n" +
	"\x03bid\x18\a \x01(\tR\x03bid2\xb5\x02\n" +
	"\rDaemonService\x12H\n" +
	"\x0eRegisterDaemon\x12\x1e.backend.RegisterDaemonRequest\x1a\x16.common.SuccessMessage\x125\n" +
	"\x0eSyncBlueprints\x12\r.common.Empty\x1a\x12.backend.Blueprint0\x01\x12;\n" +
	"\fGetBlueprint\x12\x17.common.SimpleIDMessage\x1a\x12.backend.Blueprint\x12/\n" +
	"\vSyncServers\x12\r.common.Empty\x1a\x0f.backend.Server0\x01\x125\n" +
	"\tGetServer\x12\x17.common.SimpleIDMessage\x1a\x0f.backend.ServerB\x1fZ\x1dpanelium/proto_gen_go/backendb\x06proto3"

var (
	file_backend_Daemon_proto_rawDescOnce sync.Once
	file_backend_Daemon_proto_rawDescData []byte
)

func file_backend_Daemon_proto_rawDescGZIP() []byte {
	file_backend_Daemon_proto_rawDescOnce.Do(func() {
		file_backend_Daemon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_Daemon_proto_rawDesc), len(file_backend_Daemon_proto_rawDesc)))
	})
	return file_backend_Daemon_proto_rawDescData
}

var file_backend_Daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_backend_Daemon_proto_goTypes = []any{
	(*CreateTokenResponse)(nil),          // 0: backend.CreateTokenResponse
	(*RegisterDaemonRequest)(nil),        // 1: backend.RegisterDaemonRequest
	(*Blueprint)(nil),                    // 2: backend.Blueprint
	(*BlockedFile)(nil),                  // 3: backend.BlockedFile
	(*Server)(nil),                       // 4: backend.Server
	(*proto_gen_go.IPAllocation)(nil),    // 5: common.IPAllocation
	(*proto_gen_go.ResourceLimit)(nil),   // 6: common.ResourceLimit
	(*proto_gen_go.Empty)(nil),           // 7: common.Empty
	(*proto_gen_go.SimpleIDMessage)(nil), // 8: common.SimpleIDMessage
	(*proto_gen_go.SuccessMessage)(nil),  // 9: common.SuccessMessage
}
var file_backend_Daemon_proto_depIdxs = []int32{
	3, // 0: backend.Blueprint.blocked_files:type_name -> backend.BlockedFile
	5, // 1: backend.Server.allocations:type_name -> common.IPAllocation
	6, // 2: backend.Server.resource_limit:type_name -> common.ResourceLimit
	1, // 3: backend.DaemonService.RegisterDaemon:input_type -> backend.RegisterDaemonRequest
	7, // 4: backend.DaemonService.SyncBlueprints:input_type -> common.Empty
	8, // 5: backend.DaemonService.GetBlueprint:input_type -> common.SimpleIDMessage
	7, // 6: backend.DaemonService.SyncServers:input_type -> common.Empty
	8, // 7: backend.DaemonService.GetServer:input_type -> common.SimpleIDMessage
	9, // 8: backend.DaemonService.RegisterDaemon:output_type -> common.SuccessMessage
	2, // 9: backend.DaemonService.SyncBlueprints:output_type -> backend.Blueprint
	2, // 10: backend.DaemonService.GetBlueprint:output_type -> backend.Blueprint
	4, // 11: backend.DaemonService.SyncServers:output_type -> backend.Server
	4, // 12: backend.DaemonService.GetServer:output_type -> backend.Server
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_backend_Daemon_proto_init() }
func file_backend_Daemon_proto_init() {
	if File_backend_Daemon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_Daemon_proto_rawDesc), len(file_backend_Daemon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_Daemon_proto_goTypes,
		DependencyIndexes: file_backend_Daemon_proto_depIdxs,
		MessageInfos:      file_backend_Daemon_proto_msgTypes,
	}.Build()
	File_backend_Daemon_proto = out.File
	file_backend_Daemon_proto_goTypes = nil
	file_backend_Daemon_proto_depIdxs = nil
}

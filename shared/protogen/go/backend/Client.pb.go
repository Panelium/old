// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: backend/Client.proto

package backend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	proto_gen_go "panelium/proto_gen_go"
	_ "panelium/proto_gen_go/daemon"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvailableBlueprint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bid           string                 `protobuf:"bytes,1,opt,name=bid,proto3" json:"bid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableBlueprint) Reset() {
	*x = AvailableBlueprint{}
	mi := &file_backend_Client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableBlueprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableBlueprint) ProtoMessage() {}

func (x *AvailableBlueprint) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableBlueprint.ProtoReflect.Descriptor instead.
func (*AvailableBlueprint) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{0}
}

func (x *AvailableBlueprint) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *AvailableBlueprint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AvailableBlueprints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blueprints    []*AvailableBlueprint  `protobuf:"bytes,1,rep,name=blueprints,proto3" json:"blueprints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableBlueprints) Reset() {
	*x = AvailableBlueprints{}
	mi := &file_backend_Client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableBlueprints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableBlueprints) ProtoMessage() {}

func (x *AvailableBlueprints) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableBlueprints.ProtoReflect.Descriptor instead.
func (*AvailableBlueprints) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{1}
}

func (x *AvailableBlueprints) GetBlueprints() []*AvailableBlueprint {
	if x != nil {
		return x.Blueprints
	}
	return nil
}

type AvailableLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lid           string                 `protobuf:"bytes,1,opt,name=lid,proto3" json:"lid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableLocation) Reset() {
	*x = AvailableLocation{}
	mi := &file_backend_Client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableLocation) ProtoMessage() {}

func (x *AvailableLocation) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableLocation.ProtoReflect.Descriptor instead.
func (*AvailableLocation) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{2}
}

func (x *AvailableLocation) GetLid() string {
	if x != nil {
		return x.Lid
	}
	return ""
}

func (x *AvailableLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AvailableLocations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locations     []*AvailableLocation   `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableLocations) Reset() {
	*x = AvailableLocations{}
	mi := &file_backend_Client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableLocations) ProtoMessage() {}

func (x *AvailableLocations) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableLocations.ProtoReflect.Descriptor instead.
func (*AvailableLocations) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{3}
}

func (x *AvailableLocations) GetLocations() []*AvailableLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

type AvailableNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nid           string                 `protobuf:"bytes,1,opt,name=nid,proto3" json:"nid,omitempty"`
	Lid           string                 `protobuf:"bytes,2,opt,name=lid,proto3" json:"lid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableNode) Reset() {
	*x = AvailableNode{}
	mi := &file_backend_Client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableNode) ProtoMessage() {}

func (x *AvailableNode) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableNode.ProtoReflect.Descriptor instead.
func (*AvailableNode) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{4}
}

func (x *AvailableNode) GetNid() string {
	if x != nil {
		return x.Nid
	}
	return ""
}

func (x *AvailableNode) GetLid() string {
	if x != nil {
		return x.Lid
	}
	return ""
}

func (x *AvailableNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AvailableNodes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*AvailableNode       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableNodes) Reset() {
	*x = AvailableNodes{}
	mi := &file_backend_Client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableNodes) ProtoMessage() {}

func (x *AvailableNodes) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableNodes.ProtoReflect.Descriptor instead.
func (*AvailableNodes) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{5}
}

func (x *AvailableNodes) GetNodes() []*AvailableNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type NewServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Bid           string                 `protobuf:"bytes,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Lid           *string                `protobuf:"bytes,4,opt,name=lid,proto3,oneof" json:"lid,omitempty"`
	Nid           *string                `protobuf:"bytes,5,opt,name=nid,proto3,oneof" json:"nid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewServerRequest) Reset() {
	*x = NewServerRequest{}
	mi := &file_backend_Client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewServerRequest) ProtoMessage() {}

func (x *NewServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewServerRequest.ProtoReflect.Descriptor instead.
func (*NewServerRequest) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{6}
}

func (x *NewServerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewServerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewServerRequest) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *NewServerRequest) GetLid() string {
	if x != nil && x.Lid != nil {
		return *x.Lid
	}
	return ""
}

func (x *NewServerRequest) GetNid() string {
	if x != nil && x.Nid != nil {
		return *x.Nid
	}
	return ""
}

type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Admin         bool                   `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_backend_Client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{7}
}

func (x *ClientInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ClientInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ClientInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ClientInfo) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type ServerList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*ServerInfo          `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerList) Reset() {
	*x = ServerList{}
	mi := &file_backend_Client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerList) ProtoMessage() {}

func (x *ServerList) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerList.ProtoReflect.Descriptor instead.
func (*ServerList) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{8}
}

func (x *ServerList) GetServers() []*ServerInfo {
	if x != nil {
		return x.Servers
	}
	return nil
}

type ServerInfo struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Sid            string                      `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Name           string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Software       string                      `protobuf:"bytes,4,opt,name=software,proto3" json:"software,omitempty"`
	SoftwareIcon   string                      `protobuf:"bytes,5,opt,name=software_icon,json=softwareIcon,proto3" json:"software_icon,omitempty"`
	MainAllocation *proto_gen_go.IPAllocation  `protobuf:"bytes,6,opt,name=main_allocation,json=mainAllocation,proto3,oneof" json:"main_allocation,omitempty"`
	DaemonHost     string                      `protobuf:"bytes,7,opt,name=daemon_host,json=daemonHost,proto3" json:"daemon_host,omitempty"`
	ResourceLimit  *proto_gen_go.ResourceLimit `protobuf:"bytes,8,opt,name=resource_limit,json=resourceLimit,proto3" json:"resource_limit,omitempty"`
	Location       string                      `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_backend_Client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_backend_Client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_backend_Client_proto_rawDescGZIP(), []int{9}
}

func (x *ServerInfo) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServerInfo) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *ServerInfo) GetSoftwareIcon() string {
	if x != nil {
		return x.SoftwareIcon
	}
	return ""
}

func (x *ServerInfo) GetMainAllocation() *proto_gen_go.IPAllocation {
	if x != nil {
		return x.MainAllocation
	}
	return nil
}

func (x *ServerInfo) GetDaemonHost() string {
	if x != nil {
		return x.DaemonHost
	}
	return ""
}

func (x *ServerInfo) GetResourceLimit() *proto_gen_go.ResourceLimit {
	if x != nil {
		return x.ResourceLimit
	}
	return nil
}

func (x *ServerInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

var File_backend_Client_proto protoreflect.FileDescriptor

const file_backend_Client_proto_rawDesc = "" +
	"\n" +
	"\x14backend/Client.proto\x12\abackend\x1a\fcommon.proto\x1a\x13daemon/Server.proto\":\n" +
	"\x12AvailableBlueprint\x12\x10\n" +
	"\x03bid\x18\x01 \x01(\tR\x03bid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"R\n" +
	"\x13AvailableBlueprints\x12;\n" +
	"\n" +
	"blueprints\x18\x01 \x03(\v2\x1b.backend.AvailableBlueprintR\n" +
	"blueprints\"9\n" +
	"\x11AvailableLocation\x12\x10\n" +
	"\x03lid\x18\x01 \x01(\tR\x03lid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"N\n" +
	"\x12AvailableLocations\x128\n" +
	"\tlocations\x18\x01 \x03(\v2\x1a.backend.AvailableLocationR\tlocations\"G\n" +
	"\rAvailableNode\x12\x10\n" +
	"\x03nid\x18\x01 \x01(\tR\x03nid\x12\x10\n" +
	"\x03lid\x18\x02 \x01(\tR\x03lid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\">\n" +
	"\x0eAvailableNodes\x12,\n" +
	"\x05nodes\x18\x01 \x03(\v2\x16.backend.AvailableNodeR\x05nodes\"\x98\x01\n" +
	"\x10NewServerRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x10\n" +
	"\x03bid\x18\x03 \x01(\tR\x03bid\x12\x15\n" +
	"\x03lid\x18\x04 \x01(\tH\x00R\x03lid\x88\x01\x01\x12\x15\n" +
	"\x03nid\x18\x05 \x01(\tH\x01R\x03nid\x88\x01\x01B\x06\n" +
	"\x04_lidB\x06\n" +
	"\x04_nid\"f\n" +
	"\n" +
	"ClientInfo\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x14\n" +
	"\x05admin\x18\x04 \x01(\bR\x05admin\";\n" +
	"\n" +
	"ServerList\x12-\n" +
	"\aservers\x18\x01 \x03(\v2\x13.backend.ServerInfoR\aservers\"\xe8\x02\n" +
	"\n" +
	"ServerInfo\x12\x10\n" +
	"\x03sid\x18\x01 \x01(\tR\x03sid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bsoftware\x18\x04 \x01(\tR\bsoftware\x12#\n" +
	"\rsoftware_icon\x18\x05 \x01(\tR\fsoftwareIcon\x12B\n" +
	"\x0fmain_allocation\x18\x06 \x01(\v2\x14.common.IPAllocationH\x00R\x0emainAllocation\x88\x01\x01\x12\x1f\n" +
	"\vdaemon_host\x18\a \x01(\tR\n" +
	"daemonHost\x12<\n" +
	"\x0eresource_limit\x18\b \x01(\v2\x15.common.ResourceLimitR\rresourceLimit\x12\x1a\n" +
	"\blocation\x18\t \x01(\tR\blocationB\x12\n" +
	"\x10_main_allocation2\xfc\x02\n" +
	"\rClientService\x12-\n" +
	"\aGetInfo\x12\r.common.Empty\x1a\x13.backend.ClientInfo\x123\n" +
	"\rGetServerList\x12\r.common.Empty\x1a\x13.backend.ServerList\x12E\n" +
	"\x16GetAvailableBlueprints\x12\r.common.Empty\x1a\x1c.backend.AvailableBlueprints\x12C\n" +
	"\x15GetAvailableLocations\x12\r.common.Empty\x1a\x1b.backend.AvailableLocations\x12;\n" +
	"\x11GetAvailableNodes\x12\r.common.Empty\x1a\x17.backend.AvailableNodes\x12>\n" +
	"\tNewServer\x12\x19.backend.NewServerRequest\x1a\x16.common.SuccessMessageB\x1fZ\x1dpanelium/proto_gen_go/backendb\x06proto3"

var (
	file_backend_Client_proto_rawDescOnce sync.Once
	file_backend_Client_proto_rawDescData []byte
)

func file_backend_Client_proto_rawDescGZIP() []byte {
	file_backend_Client_proto_rawDescOnce.Do(func() {
		file_backend_Client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backend_Client_proto_rawDesc), len(file_backend_Client_proto_rawDesc)))
	})
	return file_backend_Client_proto_rawDescData
}

var file_backend_Client_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_backend_Client_proto_goTypes = []any{
	(*AvailableBlueprint)(nil),          // 0: backend.AvailableBlueprint
	(*AvailableBlueprints)(nil),         // 1: backend.AvailableBlueprints
	(*AvailableLocation)(nil),           // 2: backend.AvailableLocation
	(*AvailableLocations)(nil),          // 3: backend.AvailableLocations
	(*AvailableNode)(nil),               // 4: backend.AvailableNode
	(*AvailableNodes)(nil),              // 5: backend.AvailableNodes
	(*NewServerRequest)(nil),            // 6: backend.NewServerRequest
	(*ClientInfo)(nil),                  // 7: backend.ClientInfo
	(*ServerList)(nil),                  // 8: backend.ServerList
	(*ServerInfo)(nil),                  // 9: backend.ServerInfo
	(*proto_gen_go.IPAllocation)(nil),   // 10: common.IPAllocation
	(*proto_gen_go.ResourceLimit)(nil),  // 11: common.ResourceLimit
	(*proto_gen_go.Empty)(nil),          // 12: common.Empty
	(*proto_gen_go.SuccessMessage)(nil), // 13: common.SuccessMessage
}
var file_backend_Client_proto_depIdxs = []int32{
	0,  // 0: backend.AvailableBlueprints.blueprints:type_name -> backend.AvailableBlueprint
	2,  // 1: backend.AvailableLocations.locations:type_name -> backend.AvailableLocation
	4,  // 2: backend.AvailableNodes.nodes:type_name -> backend.AvailableNode
	9,  // 3: backend.ServerList.servers:type_name -> backend.ServerInfo
	10, // 4: backend.ServerInfo.main_allocation:type_name -> common.IPAllocation
	11, // 5: backend.ServerInfo.resource_limit:type_name -> common.ResourceLimit
	12, // 6: backend.ClientService.GetInfo:input_type -> common.Empty
	12, // 7: backend.ClientService.GetServerList:input_type -> common.Empty
	12, // 8: backend.ClientService.GetAvailableBlueprints:input_type -> common.Empty
	12, // 9: backend.ClientService.GetAvailableLocations:input_type -> common.Empty
	12, // 10: backend.ClientService.GetAvailableNodes:input_type -> common.Empty
	6,  // 11: backend.ClientService.NewServer:input_type -> backend.NewServerRequest
	7,  // 12: backend.ClientService.GetInfo:output_type -> backend.ClientInfo
	8,  // 13: backend.ClientService.GetServerList:output_type -> backend.ServerList
	1,  // 14: backend.ClientService.GetAvailableBlueprints:output_type -> backend.AvailableBlueprints
	3,  // 15: backend.ClientService.GetAvailableLocations:output_type -> backend.AvailableLocations
	5,  // 16: backend.ClientService.GetAvailableNodes:output_type -> backend.AvailableNodes
	13, // 17: backend.ClientService.NewServer:output_type -> common.SuccessMessage
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_backend_Client_proto_init() }
func file_backend_Client_proto_init() {
	if File_backend_Client_proto != nil {
		return
	}
	file_backend_Client_proto_msgTypes[6].OneofWrappers = []any{}
	file_backend_Client_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backend_Client_proto_rawDesc), len(file_backend_Client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_Client_proto_goTypes,
		DependencyIndexes: file_backend_Client_proto_depIdxs,
		MessageInfos:      file_backend_Client_proto_msgTypes,
	}.Build()
	File_backend_Client_proto = out.File
	file_backend_Client_proto_goTypes = nil
	file_backend_Client_proto_depIdxs = nil
}

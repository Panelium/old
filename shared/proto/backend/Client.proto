syntax = "proto3";

package backend;
option go_package = "panelium/proto_gen_go/backend";

import "common.proto";
import "daemon/Server.proto";

service ClientService {
  rpc GetInfo(common.Empty) returns (ClientInfo);
  rpc GetServerList(common.Empty) returns (ServerList);
  rpc GetAvailableBlueprints(common.Empty) returns (AvailableBlueprints);
  rpc GetAvailableLocations(common.Empty) returns (AvailableLocations);
  rpc GetAvailableNodes(common.Empty) returns (AvailableNodes);
  rpc NewServer(NewServerRequest) returns (NewServerResponse);
}

message AvailableBlueprint {
  string bid = 1;
  string name = 2;
}

message AvailableBlueprints {
  repeated AvailableBlueprint blueprints = 1;
}

message AvailableLocation {
  string lid = 1;
  string name = 2;
}

message AvailableLocations {
  repeated AvailableLocation locations = 1;
}

message AvailableNode {
  string nid = 1;
  string lid = 2;
  string name = 3;
}

message AvailableNodes {
  repeated AvailableNode nodes = 1;
}

message NewServerRequest {
  string name = 1;
  string description = 2;
  string bid = 3;
  optional string lid = 4;
  optional string nid = 5;
}

message NewServerResponse {
  string sid = 1;
}

message ClientInfo {
  string uid = 1;
  string username = 2;
  string email = 3;
  bool admin = 4;
}

message ServerList {
  repeated ServerInfo servers = 1;
}

message ServerInfo {
  string sid = 1;
  string name = 2;
  string description = 3;
  string software = 4;
  string software_icon = 5;
  optional common.IPAllocation main_allocation = 6;
  string daemon_host = 7;
  common.ResourceLimit resource_limit = 8;
  string location = 9;
}